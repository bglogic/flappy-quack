[gd_scene load_steps=41 format=2]

[ext_resource path="res://scripts/camera.gd" type="Script" id=1]
[ext_resource path="res://scenes/bird.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/spawner_ground.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/background.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/spawner_pipe.tscn" type="PackedScene" id=5]
[ext_resource path="res://sprites/instructions.png" type="Texture" id=6]
[ext_resource path="res://sprites/number_large_0.png" type="Texture" id=7]
[ext_resource path="res://sprites/button_pause.png" type="Texture" id=8]
[ext_resource path="res://sprites/label_game_over.png" type="Texture" id=9]
[ext_resource path="res://sprites/panel_score.png" type="Texture" id=10]
[ext_resource path="res://sprites/number_medium_0.png" type="Texture" id=11]
[ext_resource path="res://sprites/label_new.png" type="Texture" id=12]
[ext_resource path="res://sprites/medal_bronze.png" type="Texture" id=13]
[ext_resource path="res://sprites/spark_0.png" type="Texture" id=14]
[ext_resource path="res://sprites/spark_1.png" type="Texture" id=15]
[ext_resource path="res://sprites/spark_2.png" type="Texture" id=16]
[ext_resource path="res://sprites/button_play_normal.png" type="Texture" id=17]
[ext_resource path="res://sprites/button_play_pressed.png" type="Texture" id=18]
[ext_resource path="res://sprites/button_score_normal.png" type="Texture" id=19]
[ext_resource path="res://sprites/button_score_pressed.png" type="Texture" id=20]
[ext_resource path="res://sprites/rect_black.png" type="Texture" id=21]
[ext_resource path="res://sprites/button_resume.png" type="Texture" id=22]
[ext_resource path="res://sprites/button_menu.png" type="Texture" id=23]

[sub_resource type="GDScript" id=1]
resource_name = "btn_instructions"
script/source = "extends TextureButton

func _ready() -> void:
  connect(\"pressed\", self, \"_on_pressed\")
  grab_focus()

func _on_pressed() -> void:
  var bird: QBird = utils.get_main_node().get_node(\"bird\")
  if bird:
    bird.state = bird.STATE_FLAPPING
  
  hide()"

[sub_resource type="GDScript" id=2]
resource_name = "hbox_score"
script/source = "extends HBoxContainer

const sprite_numbers: Array = [
  preload(\"res://sprites/number_large_0.png\"),
  preload(\"res://sprites/number_large_1.png\"),
  preload(\"res://sprites/number_large_2.png\"),
  preload(\"res://sprites/number_large_3.png\"),
  preload(\"res://sprites/number_large_4.png\"),
  preload(\"res://sprites/number_large_5.png\"),
  preload(\"res://sprites/number_large_6.png\"),
  preload(\"res://sprites/number_large_7.png\"),
  preload(\"res://sprites/number_large_8.png\"),
  preload(\"res://sprites/number_large_9.png\")
]

func _ready() -> void:
  game.connect(\"score_current_changed\", self, \"_on_score_current_changed\")
  var bird: QBird = utils.get_main_node().get_node(\"bird\")
  if bird:
    bird.connect(\"state_changed\", self, \"_on_bird_state_changed\")
  
  set_number(game.score_current)

func _on_score_current_changed() -> void:
  set_number(game.score_current)

func _on_bird_state_changed(bird: QBird) -> void:
  if bird.state == bird.STATE_HIT     : hide()
  if bird.state == bird.STATE_GROUNDED: hide()

func set_number(number: int) -> void:
  for child in get_children():
    child.queue_free()
  
  for digit in utils.get_digits(number):
    var texture_rect: TextureRect = TextureRect.new()
    texture_rect.texture = sprite_numbers[digit]
    add_child(texture_rect)"

[sub_resource type="GDScript" id=3]
resource_name = "btn_pause"
script/source = "extends TextureButton

func _ready() -> void:
  connect(\"pressed\", self, \"_on_pressed\")
  
  var bird: QBird = utils.get_main_node().get_node(\"bird\")
  if bird:
    bird.connect(\"state_changed\", self, \"_on_bird_state_changed\")

func _on_pressed() -> void:
  get_tree().paused = true

func _on_bird_state_changed(bird: QBird) -> void:
  if bird.state == bird.STATE_HIT     : hide()
  if bird.state == bird.STATE_GROUNDED: hide()"

[sub_resource type="GDScript" id=4]
script/source = "extends Container

func _ready() -> void:
  hide()
  
  var bird: QBird = utils.get_main_node().get_node(\"bird\")
  if bird:
    bird.connect(\"state_changed\", self, \"_on_bird_state_changed\")

func _on_bird_state_changed(bird: QBird) -> void:
  if bird.get_state() == bird.STATE_GROUNDED:
    $anim.play(\"show\")
"

[sub_resource type="GDScript" id=5]
script/source = "extends HBoxContainer

const sprite_numbers: Array = [
  preload(\"res://sprites/number_medium_0.png\"),
  preload(\"res://sprites/number_medium_1.png\"),
  preload(\"res://sprites/number_medium_2.png\"),
  preload(\"res://sprites/number_medium_3.png\"),
  preload(\"res://sprites/number_medium_4.png\"),
  preload(\"res://sprites/number_medium_5.png\"),
  preload(\"res://sprites/number_medium_6.png\"),
  preload(\"res://sprites/number_medium_7.png\"),
  preload(\"res://sprites/number_medium_8.png\"),
  preload(\"res://sprites/number_medium_9.png\")
]

signal counting_finished

func _ready() -> void:
  var anim: AnimationPlayer = utils.get_main_node().get_node(\"hud/cntr_gameover/anim\")
  yield(anim, \"animation_finished\")
  count_to_score()

func count_to_score() -> void:
  var lerp_time    : float = 0.0
  var lerp_duration: float = 0.5
  
  while lerp_time < lerp_duration:
    lerp_time += get_process_delta_time()
    lerp_time = min(lerp_time, lerp_duration)
    
    var percent: float = lerp_time / lerp_duration
    set_number(int(lerp(0, game.score_current, percent)))
    
    yield(get_tree(), \"idle_frame\")
  
  game.score_best = game.score_current
  emit_signal(\"counting_finished\")

func set_number(number: int) -> void:
  for child in get_children():
    child.free()
  
  for digit in utils.get_digits(number):
    var texture_rect: TextureRect = TextureRect.new()
    texture_rect.texture = sprite_numbers[digit]
    add_child(texture_rect)"

[sub_resource type="GDScript" id=6]
script/source = "extends HBoxContainer

const sprite_numbers: Array = [
  preload(\"res://sprites/number_medium_0.png\"),
  preload(\"res://sprites/number_medium_1.png\"),
  preload(\"res://sprites/number_medium_2.png\"),
  preload(\"res://sprites/number_medium_3.png\"),
  preload(\"res://sprites/number_medium_4.png\"),
  preload(\"res://sprites/number_medium_5.png\"),
  preload(\"res://sprites/number_medium_6.png\"),
  preload(\"res://sprites/number_medium_7.png\"),
  preload(\"res://sprites/number_medium_8.png\"),
  preload(\"res://sprites/number_medium_9.png\")
]

func _ready() -> void:
  game.connect(\"score_best_changed\", self, \"_on_score_best_changed\")
  set_number(game.score_best)

func _on_score_best_changed() -> void:
  set_number(game.score_best)

func set_number(number: int) -> void:
  for child in get_children():
    child.free()
  
  for digit in utils.get_digits(number):
    var texture_rect: TextureRect = TextureRect.new()
    texture_rect.texture = sprite_numbers[digit]
    add_child(texture_rect)"

[sub_resource type="GDScript" id=7]
script/source = "extends TextureRect

func _ready() -> void:
  hide()
  game.connect(\"score_best_changed\", self, \"show\")"

[sub_resource type="GDScript" id=8]
script/source = "extends TextureRect

const spr_medal_bronze  : Resource = preload(\"res://sprites/medal_bronze.png\")
const spr_medal_silver  : Resource = preload(\"res://sprites/medal_silver.png\")
const spr_medal_gold    : Resource = preload(\"res://sprites/medal_gold.png\")
const spr_medal_platinum: Resource = preload(\"res://sprites/medal_platinum.png\")

signal shown

func _ready() -> void:
  hide()
  
  var hbox_score_last = utils.get_main_node().find_node(\"hbox_score_last\")
  if hbox_score_last:
    hbox_score_last.connect(\"counting_finished\", self, \"show_medal\")

func show_medal() -> void:
  var tex: Texture = null
  if game.score_current >= game.MEDAL_BRONZE  : tex = spr_medal_bronze
  if game.score_current >= game.MEDAL_SILVER  : tex = spr_medal_silver
  if game.score_current >= game.MEDAL_GOLD    : tex = spr_medal_gold
  if game.score_current >= game.MEDAL_PLATINUM: tex = spr_medal_platinum
  
  if tex != null:
    texture = tex
    show()
    emit_signal(\"shown\")"

[sub_resource type="SpriteFrames" id=9]
animations = [ {
"frames": [ ExtResource( 14 ), ExtResource( 15 ), ExtResource( 16 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=10]
script/source = "extends AnimatedSprite

const MEDAL_RADIUS: int = 11

func _ready() -> void:
  to_random_pos()
  
  var tex_medal: TextureRect = get_parent()
  tex_medal.connect(\"shown\", $anim, \"play\", [\"shine\"])

func to_random_pos() -> void:
  var rand_angle : float = deg2rad(rand_range(0, 360))
  var rand_radius: float = rand_range(0, MEDAL_RADIUS)
  var x: int = int(rand_radius * cos(rand_angle)) + MEDAL_RADIUS
  var y: int = int(rand_radius * sin(rand_angle)) + MEDAL_RADIUS
  position = Vector2(x, y)"

[sub_resource type="Animation" id=11]
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 1, 0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "to_random_pos"
} ]
}

[sub_resource type="GDScript" id=12]
script/source = "extends HBoxContainer

func _ready() -> void:
  hide()
  
  var hbox_score_last: HBoxContainer = utils.get_main_node().find_node(\"hbox_score_last\")
  if hbox_score_last:
    hbox_score_last.connect(\"counting_finished\", self, \"show\")"

[sub_resource type="GDScript" id=13]
script/source = "extends TextureButton

func _ready() -> void:
  connect(\"pressed\", self, \"_on_pressed\")
  var hbox_score_last: HBoxContainer = utils.get_main_node().find_node(\"hbox_score_last\")
  if hbox_score_last:
    hbox_score_last.connect(\"counting_finished\", self, \"grab_focus\")

func _on_pressed() -> void:
  stage_manager.change_stage(stage_manager.STAGE_GAME)"

[sub_resource type="Animation" id=14]
tracks/0/type = "value"
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("tex_gameover:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("tex_gameover:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 24, 45 ), Vector2( 24, 50 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("tex_panelscore:rect_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ Vector2( 16, 270 ), Vector2( 16, 90 ) ]
}

[sub_resource type="GDScript" id=15]
resource_name = "cntr_pause"
script/source = "extends Container

func _ready() -> void:
  hide()
  
  var btn_pause: TextureButton = utils.get_main_node().find_node(\"btn_pause\")
  if btn_pause:
    btn_pause.connect(\"pressed\", self, \"_on_pause\")
  
  $btn_resume.connect(\"pressed\", self, \"_on_resume\")

func _on_pause() -> void:
  show()

func _on_resume() -> void:
  hide()"

[sub_resource type="GDScript" id=16]
resource_name = "btn_resume"
script/source = "extends TextureButton

func _ready() -> void:
  connect(\"pressed\", self, \"_on_pressed\")

func _on_pressed() -> void:
  get_tree().paused = false"

[sub_resource type="GDScript" id=17]
resource_name = "btn_script"
script/source = "extends TextureButton

func _ready() -> void:
  connect(\"pressed\", self, \"_on_pressed\")

func _on_pressed() -> void:
  get_tree().paused = false
  stage_manager.change_stage(stage_manager.STAGE_MENU)"

[node name="world" type="Node"]

[node name="camera" type="Camera2D" parent="."]
offset = Vector2( -36, 0 )
anchor_mode = 0
current = true
script = ExtResource( 1 )

[node name="bird" parent="." instance=ExtResource( 2 )]

[node name="spawner_ground" parent="." instance=ExtResource( 3 )]

[node name="background" parent="." instance=ExtResource( 4 )]

[node name="spawner_pipe" parent="." instance=ExtResource( 5 )]

[node name="hud" type="CanvasLayer" parent="."]

[node name="btn_instructions" type="TextureButton" parent="hud"]
editor/display_folded = true
margin_right = 144.0
margin_bottom = 256.0
action_mode = 0
script = SubResource( 1 )

[node name="texture" type="TextureRect" parent="hud/btn_instructions"]
margin_left = 44.0
margin_top = 104.0
margin_right = 101.0
margin_bottom = 153.0
texture = ExtResource( 6 )

[node name="hbox_score" type="HBoxContainer" parent="hud"]
editor/display_folded = true
margin_top = 10.0
margin_right = 144.0
margin_bottom = 28.0
mouse_filter = 2
custom_constants/separation = 2
alignment = 1
script = SubResource( 2 )

[node name="tex_num_0" type="TextureRect" parent="hud/hbox_score"]
margin_left = 66.0
margin_right = 78.0
margin_bottom = 18.0
texture = ExtResource( 7 )

[node name="btn_pause" type="TextureButton" parent="hud"]
margin_left = 10.0
margin_top = 10.0
margin_right = 23.0
margin_bottom = 24.0
texture_normal = ExtResource( 8 )
script = SubResource( 3 )

[node name="cntr_gameover" type="Container" parent="hud"]
editor/display_folded = true
visible = false
margin_right = 144.0
margin_bottom = 256.0
script = SubResource( 4 )

[node name="tex_gameover" type="TextureRect" parent="hud/cntr_gameover"]
margin_left = 24.0
margin_top = 50.0
margin_right = 120.0
margin_bottom = 71.0002
texture = ExtResource( 9 )

[node name="tex_panelscore" type="TextureRect" parent="hud/cntr_gameover"]
margin_left = 16.0
margin_top = 90.0
margin_right = 129.0
margin_bottom = 147.0
texture = ExtResource( 10 )

[node name="hbox_score_last" type="HBoxContainer" parent="hud/cntr_gameover/tex_panelscore"]
editor/display_folded = true
margin_left = 62.0
margin_top = 17.0
margin_right = 102.0
margin_bottom = 27.0
custom_constants/separation = 1
alignment = 2
script = SubResource( 5 )

[node name="tex_number_0" type="TextureRect" parent="hud/cntr_gameover/tex_panelscore/hbox_score_last"]
margin_left = 33.0
margin_right = 40.0
margin_bottom = 10.0
texture = ExtResource( 11 )

[node name="hbox_score_best" type="HBoxContainer" parent="hud/cntr_gameover/tex_panelscore"]
editor/display_folded = true
margin_left = 62.0
margin_top = 37.0
margin_right = 102.0
margin_bottom = 47.0
custom_constants/separation = 1
alignment = 2
script = SubResource( 6 )

[node name="tex_number_0" type="TextureRect" parent="hud/cntr_gameover/tex_panelscore/hbox_score_best"]
margin_left = 33.0
margin_right = 40.0
margin_bottom = 10.0
texture = ExtResource( 11 )

[node name="tex_new" type="TextureRect" parent="hud/cntr_gameover/tex_panelscore"]
margin_left = 67.0
margin_top = 29.0
margin_right = 83.0
margin_bottom = 36.0
texture = ExtResource( 12 )
script = SubResource( 7 )

[node name="tex_medal" type="TextureRect" parent="hud/cntr_gameover/tex_panelscore"]
margin_left = 13.0
margin_top = 21.0
margin_right = 35.0
margin_bottom = 43.0
texture = ExtResource( 13 )
script = SubResource( 8 )

[node name="spr_spark" type="AnimatedSprite" parent="hud/cntr_gameover/tex_panelscore/tex_medal"]
frames = SubResource( 9 )
script = SubResource( 10 )

[node name="anim" type="AnimationPlayer" parent="hud/cntr_gameover/tex_panelscore/tex_medal/spr_spark"]
playback_speed = 0.8
anims/shine = SubResource( 11 )

[node name="hbox_buttons" type="HBoxContainer" parent="hud/cntr_gameover"]
margin_left = 16.0
margin_top = 160.0
margin_right = 129.0
margin_bottom = 189.0
custom_constants/separation = 9
alignment = 1
script = SubResource( 12 )

[node name="btn_play" type="TextureButton" parent="hud/cntr_gameover/hbox_buttons"]
margin_right = 52.0
margin_bottom = 29.0
texture_normal = ExtResource( 17 )
texture_pressed = ExtResource( 18 )
script = SubResource( 13 )

[node name="btn_scores" type="TextureButton" parent="hud/cntr_gameover/hbox_buttons"]
margin_left = 61.0
margin_right = 113.0
margin_bottom = 29.0
texture_normal = ExtResource( 19 )
texture_pressed = ExtResource( 20 )

[node name="anim" type="AnimationPlayer" parent="hud/cntr_gameover"]
playback_speed = 1.5
anims/show = SubResource( 14 )

[node name="cntr_pause" type="Container" parent="hud"]
pause_mode = 2
margin_right = 144.0
margin_bottom = 256.0
script = SubResource( 15 )

[node name="tex_background" type="TextureRect" parent="hud/cntr_pause"]
modulate = Color( 1, 1, 1, 0.301961 )
margin_right = 144.0
margin_bottom = 256.0
texture = ExtResource( 21 )
expand = true

[node name="btn_resume" type="TextureButton" parent="hud/cntr_pause"]
margin_left = 10.0
margin_top = 10.0
margin_right = 23.0
margin_bottom = 24.0
texture_normal = ExtResource( 22 )
script = SubResource( 16 )

[node name="btn_menu" type="TextureButton" parent="hud/cntr_pause"]
margin_left = 52.0
margin_top = 121.0
margin_right = 92.0
margin_bottom = 135.0
texture_normal = ExtResource( 23 )
script = SubResource( 17 )
